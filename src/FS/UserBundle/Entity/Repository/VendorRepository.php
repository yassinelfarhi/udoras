<?php

namespace FS\UserBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use FS\UserBundle\Entity\Customer;

/**
 * VendorRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class VendorRepository extends EntityRepository
{
    /**
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getFindAllRaw()
    {
        return $this->createQueryBuilder('vendor')
            ->distinct(true)
            ->where('vendor.roles LIKE :roles')
            ->setParameter('roles', '%"ROLE_VENDOR"%')
            ->orderBy('vendor.fullName','ASC');
    }


    /**
     * @param Customer $customer
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getFindAllByCustomerRaw(Customer $customer)
    {
        return $this->createQueryBuilder('vendor')
            ->distinct(true)
            ->where('vendor.roles LIKE :roles AND vendor.customer = :customer ')
            ->setParameters([
                'roles' => '%"ROLE_VENDOR"%',
                'customer' => $customer
            ])
            ->orderBy('vendor.fullName', 'ASC');
    }

    /**
     * @param array $criteria
     * @return array
     */
    public function findByUniqueCriteria(array $criteria)
    {
        // would use findOneBy() but Symfony expects a Countable object
        return $this->_em->getRepository('FSUserBundle:Vendor')->findBy($criteria);
    }

	public function addFilterConditions($query, QueryBuilder $qb, $searchCustomer = true) {
		return $qb->leftJoin('vendor.customer', 'customer')
		          ->andWhere(
			          $qb->expr()->orX(
				          'vendor.fullName LIKE :query',
				          'vendor.phone LIKE :query',
				          'vendor.email LIKE :query',
				          $searchCustomer ? 'customer.company LIKE :query': '1 = 0'
			          )
		          )->setParameter('query', "%$query%");
	}
}
